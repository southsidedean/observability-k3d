# manifests/monitoring/loki-stack-values.yaml
# Values for loki-stack

grafana:
  enabled: false

loki:
  persistence:
    enabled: true
    accessModes:
      - ReadWriteOnce
    size: 10Gi

promtail:
  # Configuration for receiving syslog
  #syslog:
  #  port: 1514
  #  containerPort: 1514
  config:
    snippets:
      # Syslog receiver configuration
      # See: https://grafana.com/docs/loki/latest/send-data/promtail/configuration/#syslog_receiver_config
      extraScrapeConfigs: |
        - job_name: syslog
          syslog:
            listen_address: 0.0.0.0:1514 # This port must match SYSLOG_PORT in vars.sh
            labels:
              job: syslog
          relabel_configs:
            - source_labels: ['__syslog_message_hostname']
              target_label: 'host'
          # With multi-tenancy enabled, Loki will store logs for each host separately.
          # This pipeline stage tells Promtail to set the tenant ID for each log stream
          # to the value of the 'host' label, which we extracted above.
          pipeline_stages:
          - tenant:
              source: 'host'

  # Expose the syslog port via a Service
  extraPorts:
    syslog:
      name: syslog-tcp
      port: 1514 # This port must match SYSLOG_PORT in vars.sh
      containerPort: 1514
      protocol: TCP
      targetPort: 1514

# The setup script creates a LoadBalancer service via k3d port-mapping.
# We just need to ensure the service inside the cluster exists.
# The default service type is ClusterIP, which is fine.
# The extraPorts config above adds the syslog port to the promtail service.
